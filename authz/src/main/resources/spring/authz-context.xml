<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
			http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		  http://www.springframework.org/schema/tx
		  http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		  http://www.springframework.org/schema/context
		  http://www.springframework.org/schema/context/spring-context-3.1.xsd
		  http://www.springframework.org/schema/aop
		  http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">


    <!--
        启用 Spring 注解, 扫描指定的包
     -->
    <context:annotation-config/>
    <context:component-scan base-package="com.monkeyk.os"/>

    <!--
        加载配置文件 authz.properties
    -->
    <bean id="properties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="locations">
            <list>
                <value>classpath:authz.properties</value>
            </list>
        </property>
    </bean>
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="properties" ref="properties"/>
    </bean>

    <!--
        数据源 配置
    -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>

        <property name="validationQuery" value="SELECT 1"/>
        <property name="testOnReturn" value="false"/>
        <property name="testOnBorrow" value="true"/>
    </bean>


    <!--
        事务配置
    -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--
        启用事务的 相关注解 @Transactional
    -->
    <tx:annotation-driven transaction-manager="transactionManager"/>


    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"/>
    </bean>


    <!--transaction-->
    <!--
        事务的 AOP 配置
    -->
    <aop:config>
        <aop:advisor advice-ref="applicationAdvisor" pointcut="execution(* com.monkeyk.os.service.impl.*.*(..))"/>
    </aop:config>

    <!--advisor-->
    <tx:advice id="applicationAdvisor" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="*" propagation="REQUIRED"/>
            <tx:method name="load*" propagation="REQUIRED" read-only="true"/>
            <tx:method name="is*" propagation="REQUIRED" read-only="true"/>
        </tx:attributes>
    </tx:advice>

    <!--
        AuthenticationId 的生成器
    -->
    <bean id="authenticationIdGenerator" class="com.monkeyk.os.domain.oauth.DefaultAuthenticationIdGenerator"/>


    <!--
        使用MD5 OAuthIssuer, 生成随机值,如 access_token, refresh_token
        可根据需要扩展使用其他的实现
    -->
    <bean id="oAuthIssuer" class="org.apache.oltu.oauth2.as.issuer.OAuthIssuerImpl">
        <constructor-arg>
            <bean class="org.apache.oltu.oauth2.as.issuer.MD5Generator"/>
        </constructor-arg>
    </bean>

    <!--more bean configuration in here-->

</beans>